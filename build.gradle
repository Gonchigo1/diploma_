import org.springframework.boot.gradle.plugin.SpringBootPlugin

buildscript {
//    ext {
//        lombokVersion = '8.6'
//    }
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath "io.freefair.gradle:lombok-plugin:8.6"
        classpath "io.spring.gradle:dependency-management-plugin:1.1.5"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:3.3.1"
    }
}

subprojects {
    group = 'mn.astvision.starter'
    version = '0.0.1-SNAPSHOT'

    ext {
        springCloudVersion = '2023.0.2'

        awsSdkVersion = '2.26.7'
        commonsCodecVersion = '1.17.0'
        commonsIOVersion = '2.16.1'
        commonsLang3Version = '3.14.0'
        cyclopsVersion = '10.4.1'
        fastExcelVersion = '0.18.0'
        firebaseVersion = '9.3.0'
        googleLibrariesVersion = '26.42.0'
//        googleAnalyticsApiVersion = 'v4-rev174-1.25.0'
//        googleHttpClientVersion = '1.43.2'
        jacksonVersion = '2.17.1'
        jakartaMailApiVersion = '2.1.3'
        jakartaValidationApiVersion = '3.1.0'
        jjwtVersion = '0.12.3'
        otpVersion = '1.2.2'
        redissonVersion = '3.32.0'
        socketIoClientVersion = '2.1.0'
    }

    apply plugin: 'java-library'
    apply plugin: 'io.freefair.lombok'
    apply plugin: 'io.spring.dependency-management'

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
        options.compilerArgs += ['-parameters'] // needed for 3.2.x
    }

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

//    if (plugins.hasPlugin('java')) {
//    }

    dependencyManagement {
        imports {
            mavenBom SpringBootPlugin.BOM_COORDINATES
        }
    }

    repositories {
        mavenCentral()
//        gradlePluginPortal()
    }

    dependencies {
        implementation "org.projectlombok:lombok:1.18.32"
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    test {
        useJUnitPlatform()
    }
}
